name: Go

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  buildx:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v3
        with:
          buildx-version: latest
          qemu-version: latest

      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}

      - name: Cache Docker layers
        uses: actions/cache@v2
        id: cache
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Run Buildx
        run: |
          docker buildx build \
            --platform linux/amd64,linux/arm64,linux/ppc64le \
            --output "type=image,push=false" \
            --file ./build/Dockerfile .

      - name: Docker Buildx (push)
        run: |
          echo ${{ secrets.CR_PAT }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          IMAGE_NAME=kube-keepalived-vip
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          [ "$VERSION" == "master" ] && VERSION=latest
          echo IMAGE_NAME=kube-keepalived-vip
          echo VERSION=$VERSION
          docker buildx build \
            --cache-from "type=local,src=/tmp/.buildx-cache" \
            --platform linux/amd64,linux/arm64,linux/ppc64le \
            --output "type=image,push=true" \
            --tag ghcr.io/${{ github.repository }}/$IMAGE_NAME:$VERSION \
            --file ./build/Dockerfile .
